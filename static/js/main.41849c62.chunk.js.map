{"version":3,"sources":["actions.js","IncrementButton.js","props.js","App.js","reducers.js","epics.js","index.js"],"names":["createActions","addButton","incrementCounter","connect","dispatch","Object","objectSpread","payload","incrementCounterAction","_ref","react_default","a","createElement","onClick","state","counter","_ref2","buttons","addButtonAction","_ref$counter","_ref$buttons","react","e","currentTarget","nodeName","Array","fill","map","_","i","src_IncrementButton","key","reducers","handleActions","_handleActions","defineProperty","epics","combineEpics","action$","pipe","ofType","tap","console","log","type","mapTo","epicMiddleware","createEpicMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"qMAK+CA,YAH5B,aACO,qBAEXC,cAAWC,qBCGXC,cACX,KACA,SAAAC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GCAoB,SAAAD,GAAQ,MAAK,CACzCF,iBAAkB,SAAAK,GAAO,OAAIH,EAASI,EAAuBD,MDAtDL,CAAiBE,KAHbD,CAJS,SAAAM,GAAA,IAAGP,EAAHO,EAAGP,iBAAH,OACpBQ,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMX,MAAvB,uBEcWC,cACX,SAAAW,GAAK,OAAAT,OAAAC,EAAA,EAAAD,CAAA,GDfc,SAAAI,GAAA,IAAGM,EAAHN,EAAGM,QAAH,MAAkB,CAAEA,WCgBhCA,CAAQD,GDfI,SAAAE,GAAA,IAAGC,EAAHD,EAAGC,QAAH,MAAkB,CAAEA,WCgBhCA,CAAQH,KAEf,SAAAV,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GDjBa,SAAAD,GAAQ,MAAK,CAClCH,UAAW,SAAAM,GAAO,OAAIH,EAASc,EAAgBX,MCiBxCN,CAAUG,KANND,CAdH,SAAAM,GAAA,IAAAU,EAAAV,EAAGM,eAAH,IAAAI,EAAa,EAAbA,EAAAC,EAAAX,EAAgBQ,eAAhB,IAAAG,EAA0B,EAA1BA,EAA6BnB,EAA7BQ,EAA6BR,UAA7B,OACRS,EAAAC,EAAAC,cAACS,EAAA,SAAD,KACIX,EAAAC,EAAAC,cAAA,sBAAcG,GACdL,EAAAC,EAAAC,cAAA,UAAQC,QAAS,SAAAS,GAAC,OAAIrB,EAAUqB,EAAEC,cAAcC,YAAhD,cAGCC,MAAMR,GACFS,OACAC,IAAI,SAACC,EAAGC,GAAJ,OACDnB,EAAAC,EAAAC,cAACkB,EAAD,CAAiBC,IAAKF,iCCXzBG,EAAWC,aAAaC,EAAA,GAAA7B,OAAA8B,EAAA,EAAA9B,CAAA6B,EAE5BjC,EAAY,SAAAa,GAAK,OAAAT,OAAAC,EAAA,EAAAD,CAAA,GAAUS,EAAV,CAAiBG,QAASH,EAAMG,QAAU,MAF/BZ,OAAA8B,EAAA,EAAA9B,CAAA6B,EAG5BhC,EAAmB,SAAAY,GAAK,OAAAT,OAAAC,EAAA,EAAAD,CAAA,GAClBS,EADkB,CAErBC,QAASD,EAAMC,QAAU,MALAmB,GAQjC,4CCgBSE,EAAQC,YAbQ,SAAAC,GAAO,OAChCA,EAAQC,KACJC,YAAOtC,GACPuC,YAAI,SAAAzB,GAAA,IAAGT,EAAHS,EAAGT,QAAH,OACAmC,QAAQC,IACJ,uBACAzC,IAAmB0C,KACnBrC,KAGRsC,YAAM,CAAED,KAAM,YAnBA,SAAAN,GAAO,OACzBA,EAAQC,KACJC,YAAOvC,GACPwC,YAAI,SAAAhC,GAAA,IAAGF,EAAHE,EAAGF,QAAH,OACAmC,QAAQC,IAAI,sBAAuB1C,IAAY2C,KAAMrC,KAEzDsC,YAAM,CAAED,KAAM,aCFhBE,EAAiBC,cAEjBC,EAAQC,YACVjB,EACA,CAAEjB,QAAS,EAAGE,QAAS,GACvBiC,YAAgBJ,IAGpBA,EAAeK,IAAIf,GAEnBgB,IAASC,OACL3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAUN,MAAOA,GACbtC,EAAAC,EAAAC,cAAC2C,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.41849c62.chunk.js","sourcesContent":["import { createActions } from 'redux-actions';\r\n\r\nconst ADD_BUTTON = 'ADD_BUTTON';\r\nconst INCREMENT_COUNTER = 'INCREMENT_COUNTER';\r\n\r\nexport const { addButton, incrementCounter } = createActions(\r\n    ADD_BUTTON,\r\n    INCREMENT_COUNTER\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { incrementCounter } from './props';\r\n\r\nconst IncrementButton = ({ incrementCounter }) => (\r\n    <button onClick={() => incrementCounter()}>Increment Counter</button>\r\n);\r\n\r\nexport default connect(\r\n    null,\r\n    dispatch => ({\r\n        ...incrementCounter(dispatch)\r\n    })\r\n)(IncrementButton);\r\n","import {\r\n    addButton as addButtonAction,\r\n    incrementCounter as incrementCounterAction\r\n} from './actions';\r\n\r\nexport const counter = ({ counter }) => ({ counter });\r\nexport const buttons = ({ buttons }) => ({ buttons });\r\nexport const addButton = dispatch => ({\r\n    addButton: payload => dispatch(addButtonAction(payload))\r\n});\r\nexport const incrementCounter = dispatch => ({\r\n    incrementCounter: payload => dispatch(incrementCounterAction(payload))\r\n});\r\n","import React, { Fragment } from 'react';\nimport IncrementButton from './IncrementButton';\nimport { connect } from 'react-redux';\nimport { counter, buttons, addButton } from './props';\n\nconst App = ({ counter = 0, buttons = 0, addButton }) => (\n    <Fragment>\n        <h1>Counter: {counter}</h1>\n        <button onClick={e => addButton(e.currentTarget.nodeName)}>\n            Add Button\n        </button>\n        {Array(buttons)\n            .fill()\n            .map((_, i) => (\n                <IncrementButton key={i} />\n            ))}\n    </Fragment>\n);\n\nexport default connect(\n    state => ({\n        ...counter(state),\n        ...buttons(state)\n    }),\n    dispatch => ({\n        ...addButton(dispatch)\n    })\n)(App);\n","import { handleActions } from 'redux-actions';\r\nimport { addButton, incrementCounter } from './actions';\r\n\r\nexport const reducers = handleActions(\r\n    {\r\n        [addButton]: state => ({ ...state, buttons: state.buttons + 1 }),\r\n        [incrementCounter]: state => ({\r\n            ...state,\r\n            counter: state.counter + 1\r\n        })\r\n    },\r\n    {}\r\n);\r\n","import { combineEpics } from 'redux-observable';\r\nimport { ofType } from 'redux-observable';\r\nimport { mapTo, tap } from 'rxjs/operators';\r\nimport { addButton, incrementCounter } from './actions';\r\n\r\nconst addButtonEpic = action$ =>\r\n    action$.pipe(\r\n        ofType(addButton),\r\n        tap(({ payload }) =>\r\n            console.log('I AM THE FIRST EPIC', addButton().type, payload)\r\n        ),\r\n        mapTo({ type: 'NO_OP' })\r\n    );\r\n\r\nconst incrementCounterEpic = action$ =>\r\n    action$.pipe(\r\n        ofType(incrementCounter),\r\n        tap(({ payload }) =>\r\n            console.log(\r\n                'I AM THE SECOND EPIC',\r\n                incrementCounter().type,\r\n                payload\r\n            )\r\n        ),\r\n        mapTo({ type: 'NO_OP' })\r\n    );\r\n\r\nexport const epics = combineEpics(incrementCounterEpic, addButtonEpic);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { reducers } from './reducers';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { epics } from './epics';\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst store = createStore(\n    reducers,\n    { counter: 0, buttons: 1 },\n    applyMiddleware(epicMiddleware)\n);\n\nepicMiddleware.run(epics);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}